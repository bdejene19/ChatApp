[{"/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/index.js":"1","/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/App.js":"2","/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/reportWebVitals.js":"3","/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/components/styledComponents.js":"4","/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/pages/SignIn.js":"5","/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/pages/AvailableRooms.js":"6","/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/components/ExistingRoom.js":"7","/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/components/RoomsJoined.js":"8","/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/pages/CreateChatRoom.js":"9"},{"size":588,"mtime":1608082284232,"results":"10","hashOfConfig":"11"},{"size":1147,"mtime":1608418682599,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1607880218059,"results":"13","hashOfConfig":"11"},{"size":2060,"mtime":1608410384278,"results":"14","hashOfConfig":"11"},{"size":6022,"mtime":1608438918462,"results":"15","hashOfConfig":"11"},{"size":4368,"mtime":1608439904134,"results":"16","hashOfConfig":"11"},{"size":747,"mtime":1608411225350,"results":"17","hashOfConfig":"11"},{"size":962,"mtime":1608417947670,"results":"18","hashOfConfig":"11"},{"size":3140,"mtime":1608439142089,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"95no2w",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/index.js",[],["42","43"],"/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/App.js",[],"/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/reportWebVitals.js",[],"/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/components/styledComponents.js",[],"/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/pages/SignIn.js",["44"],"import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { AvatarWrapper, ChatImgOptionWrapper } from '../components/styledComponents';\nimport { useHistory } from 'react-router-dom';\nimport AvailableChatRooms from './AvailableRooms';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst changeUserIcon = () => {\n  document.getElementById('usericon-option').style.display = 'grid';\n}\n\n\nexport default function SignIn() {\n  const classes = useStyles();\n  const [chatUserIcon, setUserIcon] = useState(<LockOutlinedIcon/>);\n  const [username, setUsername] = useState(\"\");\n\n  const selectImg = (imageSelected) => {\n    const chosenImg = document.getElementById(imageSelected);\n    document.getElementById(\"usericon-option\").style.display = \"none\";\n    setUserIcon(<img src={chosenImg.src} alt={chosenImg.alt}></img>);\n  }\n  let history = useHistory();\n\n\n  // figure out how to do a post fetch request\n  function submitForm() {\n     fetch('/chatRooms', {\n      method: \"POST\",\n      body: JSON.stringify({\n        // remember to put the name of you fields in quotation marks => or else does not recognize\n        chatUsername: username,\n        // figure out avatar img problem for post request => basically add state to hold img src and store in DB\n        // avatarImg: chatUserIcon,\n      }),\n      headers: {\n        \"accept\": \"application/json\",\n        \"content-type\": \"application/json\"\n      }\n     \n    });\n    history.push('/chatRooms');\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n      <ChatImgOptionWrapper id='usericon-option'>\n            <div>\n              <img src=\"https://cdn3.iconfinder.com/data/icons/avatars-15/64/_Bearded_Man-17-512.png\" alt='user icon' id='img1' onClick={() => selectImg('img1')}></img>\n            </div>\n            <div>\n            <img src=\"https://www.svgrepo.com/show/65059/woman.svg\" alt='user icon' id='img2' onClick={() => selectImg('img2')}></img>\n            </div>\n      \n            <div>\n              <img src=\"https://www.svgrepo.com/show/6741/woman.svg\" alt='user icon' id='img3' onClick={() => selectImg('img3')}></img>\n            </div>\n\n            <div>\n              <img src=\"https://thumbs.dreamstime.com/z/old-man-avatar-icon-flat-style-male-user-icon-cartoon-man-avatar-vector-stock-91602443.jpg\" alt='user icon' id='img4' onClick={() => selectImg('img4')}></img>\n            </div>\n\n            <div>\n              <img src=\"https://thumbs.dreamstime.com/z/businessman-avatar-icon-flat-style-male-user-icon-cartoon-man-avatar-vector-stock-91602644.jpg\" alt='user icon' id='img5' onClick={() => selectImg('img5')}></img>\n            </div>\n\n            <div>\n              <img src=\"https://www.svgrepo.com/show/135102/indian.svg\" alt='user icon' id='img6' onClick={() => selectImg('img6')}></img>\n            </div>\n            <div>\n              <img src=\"https://www.svgrepo.com/show/31050/man.svg\" alt='user icon' id='img7' onClick={() => selectImg('img7')}></img>\n            </div>\n            <div>\n              <img src=\"https://www.svgrepo.com/show/18986/african.svg\" alt='user icon' id='img8' onClick={() => selectImg('img8')}></img>\n            </div>\n\n            <div>\n            <img src=\"https://www.svgrepo.com/show/16084/doctor.svg\" alt='user icon' id='img9' onClick={() => selectImg('img9')}></img>\n\n            </div>\n        </ChatImgOptionWrapper>\n        <AvatarWrapper>\n          <Avatar className={classes.avatar} id='avatar'>\n            {/* <LockOutlinedIcon /> */}\n            {chatUserIcon}\n          </Avatar>\n          <EditIcon onClick={() => changeUserIcon()} className='edit-username'></EditIcon>\n        </AvatarWrapper>\n\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in \n        </Typography>\n        <form className={classes.form} noValidate id='chat-form' action='/chatRooms' method=\"POST\">\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"chatUsername\"\n            label=\"Chat Username\"\n            value={username}\n            name=\"chatUsername\"\n            autoComplete=\"chatUsername\"\n            autoFocus\n            onChange={e => setUsername(e.target.value)}\n          />\n\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          \n          {/* <Link to='/chatRooms'> */}\n            <Button\n                type=\"button\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                // submitForm function should submit input field STATE value and send to back end using fetch request\n                // after awaiting response, will then send to /chatRooms page\n\n                onClick={() => submitForm()}\n              >\n                Join a Chat Room\n              </Button> \n\n          {/* </Link> */}\n                     \n        </form>\n      </div>\n    </Container>\n  )\n}","/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/pages/AvailableRooms.js",["45"],"import React, { useState } from 'react'\nimport {AvailableChatRooms} from '../components/styledComponents';\nimport {Typography, Button} from '@material-ui/core';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport styled from 'styled-components';\nimport RoomsJoined from '../components/RoomsJoined';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n\nconst UserGroupChatsWrapper = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n\n`;\n\nexport default function ChatRooms(props) {\n    const [activity, setActivity] = useState(<FiberManualRecordIcon id='activity-status' style={{color: \"green\"}}></FiberManualRecordIcon>);\n\n    const [activeGroups, setGroupActivity] = useState([])\n    activeGroups.push(<RoomsJoined mostRecentMessageUser='bemnet' userMessage='hey there'></RoomsJoined>);\n                // setGroupActivity([<RoomsJoined mostRecentMessageUser='bemnet' userMessage='hey there'></RoomsJoined>]);\n\n    const changeStatus = () => {\n        var selectorOptions = document.getElementById('activity-states');\n        var selectedValue = selectorOptions.options[selectorOptions.selectedIndex].value;\n        if ( selectedValue === 'online') {\n            setActivity(<FiberManualRecordIcon id='activity-status' style={{color: 'green'}}></FiberManualRecordIcon>)\n        }\n        if (selectedValue === 'offline') {\n            setActivity(<FiberManualRecordIcon id='activity-status' style={{color: \"lightgrey\"}}></FiberManualRecordIcon>)\n        }if (selectedValue === 'away') {\n            setActivity(<FiberManualRecordIcon id='activity-status' style={{color: 'red'}}></FiberManualRecordIcon>)\n        }if (selectedValue === 'busy') {\n            setActivity(<FiberManualRecordIcon id='activity-status' style={{color: 'orange'}}></FiberManualRecordIcon>)\n        }\n    }\n\n    // let inProgressChats = activeGroups.forEach(group => {\n    //     <RoomsJoined mostRecentMessageUser='bemnet' userMessage='hey there'></RoomsJoined>\n    // })\n\n\n\n    return (\n        <AvailableChatRooms>\n            <div className='chatWrapper'>\n                <nav>\n                    <Typography variant='h2' id='app-name'>CheckBox</Typography>\n                    <div className='activity'>\n                        <Typography variant='body1' className='activity'>Currently: </Typography>\n                        <select className='activity-options' id='activity-states' onChange={() => changeStatus()}>\n                            <option value='online'>Online</option>\n                            <option value='offline'>Offline</option>\n                            <option value='away'>Away</option>\n                            <option value='busy'>Busy</option>\n                        </select>\n                        {activity}\n                    </div>\n                </nav>\n                    \n                <div className='welcome-user'>\n                    <Autocomplete>\n\n                    </Autocomplete>\n                    <UserGroupChatsWrapper>\n                        <div className='group-activity'>\n                        {activeGroups.length === 0 ? \n                            <Typography variant='h4'>Looks like you have no active Chats!</Typography>\n                         : <div> <h1>your group chats are: </h1><br></br>{activeGroups}</div>}\n                        </div>\n                        \n\n                    </UserGroupChatsWrapper>\n                    {/* <Button variant='contained'>Make a New Chat Room!</Button> */}\n\n                </div>\n                \n                <div className='roomsToJoin'>\n                    <form id='availableRooms-form'>\n                        <label for='room'>Available Rooms</label>\n                        <div className=\"availableRoom-wrapper\">\n                            where a room will be\n                        </div>\n                        {/* <select id='rooms'>\n                            <option value={props.chatRoomName}>{props.chatRoomName}</option>\n                        </select> \n                        <br></br> */}\n                        \n                        <Button variant=\"contained\" href='../createChatRoom'>Create a Chat Room</Button>\n                    </form>\n\n                </div>\n\n            </div>\n            \n            \n                \n        </AvailableChatRooms>\n    )\n}\n","/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/components/ExistingRoom.js",[],"/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/components/RoomsJoined.js",[],"/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/pages/CreateChatRoom.js",["46","47"],"import React, { useState} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Button, Typography} from '@material-ui/core';\nimport styled from 'styled-components';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n\nconst CreateChatRoomWrapper = styled.div`\n    display: grid;\n    grid-template-columns: auto;\n    justify-content: space-around;\n    justify-items: center;\n\n    #createChat-form {\n        width: 60%;\n    }\n\n`;\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }));\n\nexport default function CreateChatRoom() {\n    const classes = useStyles();;\n    const [newRoomName, setNewRoomName] = useState(\"\");\n    const [roomPassword, setRoomPassword] = useState(\"\");\n    const [pswdIsRequired, setPasswordIsRequired] = useState(false);\n\n    return (\n        <CreateChatRoomWrapper>\n            <Typography component='h3' variant='h4'>Create your room</Typography>\n            <form className={classes.form} noValidate id='createChat-form' action='/chatRooms' method=\"POST\">\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"newRoomName\"\n                    label=\"Room Name\"\n                    value={newRoomName}\n                    name=\"newRoomName\"\n                    autoComplete=\"newRoomName\"\n                    autoFocus\n                    onChange={e => setNewRoomName(e.target.value)}\n                />\n\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"roomPassword\"\n                    label=\"Room Password\"\n                    value={roomPassword}\n                    name=\"roomPassword\"\n                    autoComplete=\"roomPassword\"\n                    autoFocus\n                    onChange={e => setRoomPassword(e.target.value)}\n                />        \n\n                <FormControlLabel\n                    control={<Checkbox value=\"Password\" color=\"primary\" />}\n                    label=\"Require Room Password\"\n                />\n                \n                <Button\n                    type=\"button\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                    // onClick={() => submitForm()}\n                >\n                    Create GroupChat!\n                </Button> \n\n                \n                        \n            </form>\n        </CreateChatRoomWrapper>\n    )\n}\n",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":15,"column":8,"nodeType":"54","messageId":"55","endLine":15,"endColumn":26},{"ruleId":"52","severity":1,"message":"56","line":20,"column":26,"nodeType":"54","messageId":"55","endLine":20,"endColumn":42},{"ruleId":"52","severity":1,"message":"57","line":46,"column":12,"nodeType":"54","messageId":"55","endLine":46,"endColumn":26},{"ruleId":"52","severity":1,"message":"58","line":46,"column":28,"nodeType":"54","messageId":"55","endLine":46,"endColumn":49},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'AvailableChatRooms' is defined but never used.","Identifier","unusedVar","'setGroupActivity' is assigned a value but never used.","'pswdIsRequired' is assigned a value but never used.","'setPasswordIsRequired' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]