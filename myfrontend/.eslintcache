[{"/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/index.js":"1","/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/App.js":"2","/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/reportWebVitals.js":"3","/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/components/styledComponents.js":"4","/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/pages/SignIn.js":"5","/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/pages/AvailableRooms.js":"6","/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/components/ExistingRoom.js":"7","/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/components/RoomsJoined.js":"8","/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/pages/CreateChatRoom.js":"9"},{"size":588,"mtime":1608082284232,"results":"10","hashOfConfig":"11"},{"size":1147,"mtime":1608418682599,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1607880218059,"results":"13","hashOfConfig":"11"},{"size":2060,"mtime":1608410384278,"results":"14","hashOfConfig":"11"},{"size":6026,"mtime":1608594378685,"results":"15","hashOfConfig":"11"},{"size":4353,"mtime":1608567940668,"results":"16","hashOfConfig":"11"},{"size":747,"mtime":1608411225350,"results":"17","hashOfConfig":"11"},{"size":962,"mtime":1608575856350,"results":"18","hashOfConfig":"11"},{"size":4402,"mtime":1608571897296,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"95no2w",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/index.js",[],["42","43"],"/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/App.js",[],"/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/reportWebVitals.js",[],"/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/components/styledComponents.js",[],["44","45"],"/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/pages/SignIn.js",[],"/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/pages/AvailableRooms.js",["46"],"import React, { useState } from 'react'\nimport {AvailableChatRooms} from '../components/styledComponents';\nimport {Typography, Button} from '@material-ui/core';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport styled from 'styled-components';\nimport RoomsJoined from '../components/RoomsJoined';\n\n\nconst UserGroupChatsWrapper = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n\n`;\n\nexport default function ChatRooms(props) {\n    const [activity, setActivity] = useState(<FiberManualRecordIcon id='activity-status' style={{color: \"green\"}}></FiberManualRecordIcon>);\n\n    const [activeGroups, setGroupActivity] = useState([])\n    activeGroups.push(<RoomsJoined mostRecentMessageUser='bemnet' userMessage='hey there'></RoomsJoined>);\n                // setGroupActivity([<RoomsJoined mostRecentMessageUser='bemnet' userMessage='hey there'></RoomsJoined>]);\n\n    const changeStatus = () => {\n        var selectorOptions = document.getElementById('activity-states');\n        var selectedValue = selectorOptions.options[selectorOptions.selectedIndex].value;\n        if ( selectedValue === 'online') {\n            setActivity(<FiberManualRecordIcon id='activity-status' style={{color: 'green'}}></FiberManualRecordIcon>)\n        }\n        if (selectedValue === 'offline') {\n            setActivity(<FiberManualRecordIcon id='activity-status' style={{color: \"lightgrey\"}}></FiberManualRecordIcon>)\n        }if (selectedValue === 'away') {\n            setActivity(<FiberManualRecordIcon id='activity-status' style={{color: 'red'}}></FiberManualRecordIcon>)\n        }if (selectedValue === 'busy') {\n            setActivity(<FiberManualRecordIcon id='activity-status' style={{color: 'orange'}}></FiberManualRecordIcon>)\n        }\n    }\n\n    // let inProgressChats = activeGroups.forEach(group => {\n    //     <RoomsJoined mostRecentMessageUser='bemnet' userMessage='hey there'></RoomsJoined>\n    // })\n\n\n\n    return (\n        <AvailableChatRooms>\n            <div className='chatWrapper'>\n                <nav>\n                    <Typography variant='h2' id='app-name'>CheckBox</Typography>\n                    <div className='activity'>\n                        <Typography variant='body1' className='activity'>Currently: </Typography>\n                        <select className='activity-options' id='activity-states' onChange={() => changeStatus()}>\n                            <option value='online'>Online</option>\n                            <option value='offline'>Offline</option>\n                            <option value='away'>Away</option>\n                            <option value='busy'>Busy</option>\n                        </select>\n                        {activity}\n                    </div>\n                </nav>\n                    \n                <div className='welcome-user'>\n                    {/* <Autocomplete>\n                        hello there\n                    </Autocomplete> */}\n                    <UserGroupChatsWrapper>\n                        <div className='group-activity'>\n                        {activeGroups.length === 0 ? \n                            <Typography variant='h4'>Looks like you have no active Chats!</Typography>\n                         : <div> <h1>your group chats are: </h1><br></br>{activeGroups}</div>}\n                        </div>\n                        \n\n                    </UserGroupChatsWrapper>\n                    {/* <Button variant='contained'>Make a New Chat Room!</Button> */}\n\n                </div>\n                \n                <div className='roomsToJoin'>\n                    <form id='availableRooms-form'>\n                        <label for='room'>Available Rooms</label>\n                        <div className=\"availableRoom-wrapper\">\n                            where a room will be\n                        </div>\n                        {/* <select id='rooms'>\n                            <option value={props.chatRoomName}>{props.chatRoomName}</option>\n                        </select> \n                        <br></br> */}\n                        \n                        <Button variant=\"contained\" href='../createChatRoom'>Create a Chat Room</Button>\n                    </form>\n\n                </div>\n\n            </div>\n            \n            \n                \n        </AvailableChatRooms>\n    )\n}\n","/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/components/ExistingRoom.js",[],"/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/components/RoomsJoined.js",[],"/Users/Bemnet/PycharmProjects/ChatApp/myfrontend/src/pages/CreateChatRoom.js",["47","48"],"import React, { useState} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Button, Typography} from '@material-ui/core';\nimport styled from 'styled-components';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { useHistory } from 'react-router-dom';\n\nconst CreateChatRoomWrapper = styled.div`\n    width: 100vw;\n    grid-template-columns: auto;\n    justify-content: space-around;\n    justify-items: center;\n    display: flex;\n    justify-content: center;\n\n    #createChat-form {\n        width: 35%;\n        border: solid lightgrey 5px;\n        padding: 1em;\n        border-radius: 2%;\n        justify-content: center;\n        box-shadow: 0 0 5px 5px slateblue;\n\n    }\n    #roomPswd-wrapper {\n            display: none;\n    }\n\n`;\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }));\n\nconst requirePassword = () => {\n    let myCheckbox = document.getElementById('pswd-checkbox').checked;\n    let pswdRequired = document.getElementById('roomPswd-wrapper');\n    if (myCheckbox) {\n        pswdRequired.style.display = 'block';        \n    } else {\n        pswdRequired.style.display = 'none';\n    }\n}\n\n\n\n\nexport default function CreateChatRoom() {\n    const classes = useStyles();;\n    const [newRoomName, setNewRoomName] = useState(\"\");\n    const [roomPassword, setRoomPassword] = useState(\"\");\n    const [pswdIsRequired, setPasswordIsRequired] = useState(false);\n\n    let history = useHistory();\n\n    const submitForm = () => {\n        fetch('/createChatRoom', {\n            method: \"POST\",\n            headers: {\n                \"accept\": \"application/json\",\n                \"content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                roomName: newRoomName,\n                roomPassword: roomPassword,\n            })   \n        })\n        history.push('../chatRooms');\n    }\n\n    return (\n        <CreateChatRoomWrapper>\n            <form className={classes.form} noValidate id='createChat-form' action='/chatRooms' method=\"POST\">\n            <Typography component='h3' variant='h4'>Create your room</Typography>\n\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"newRoomName\"\n                    label=\"Room Name\"\n                    value={newRoomName}\n                    name=\"newRoomName\"\n                    autoComplete=\"newRoomName\"\n                    autoFocus\n                    onChange={e => setNewRoomName(e.target.value)}\n                />\n\n                <div id='roomPswd-wrapper'>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        // required\n                        fullWidth\n                        id=\"roomPassword\"\n                        label=\"Room Password\"\n                        value={roomPassword}\n                        name=\"roomPassword\"\n                        autoComplete=\"roomPassword\"\n                        autoFocus\n                        onChange={e => setRoomPassword(e.target.value)}\n                    />  \n                </div> \n                     \n\n                <FormControlLabel\n                    control={<Checkbox value=\"Password\" color=\"primary\" id='pswd-checkbox' onClick={() => requirePassword()}/>}\n                    label=\"Require room password\"\n                    \n                />\n                \n                <Button\n                    type=\"button\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                    onClick={() => submitForm()}\n                >\n                    Create GroupChat!\n                </Button>            \n            </form>\n        </CreateChatRoomWrapper>\n    )\n}\n",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"49","replacedBy":"53"},{"ruleId":"51","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":19,"column":26,"nodeType":"57","messageId":"58","endLine":19,"endColumn":42},{"ruleId":"55","severity":1,"message":"59","line":70,"column":12,"nodeType":"57","messageId":"58","endLine":70,"endColumn":26},{"ruleId":"55","severity":1,"message":"60","line":70,"column":28,"nodeType":"57","messageId":"58","endLine":70,"endColumn":49},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],["61"],["62"],"no-unused-vars","'setGroupActivity' is assigned a value but never used.","Identifier","unusedVar","'pswdIsRequired' is assigned a value but never used.","'setPasswordIsRequired' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]